% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clim_corr_d.R
\name{clim_corr_d}
\alias{clim_corr_d}
\title{Calculate Daily Climate Correlation (Day-Resolution Output)}
\usage{
clim_corr_d(
  growth_data,
  climate_data,
  date_col = "date",
  value_col = "value",
  growth_var = "res",
  climate_var_name = "climate_d",
  window_widths_days = 30:365,
  end_days = 1:730,
  start_year = NULL,
  end_year = NULL,
  cor_method = "pearson",
  daily_roll_fun = "sum",
  sig = 0.05,
  save_significant = TRUE,
  output_filename = NULL
)
}
\arguments{
\item{growth_data}{A data frame with tree growth data ('year', \code{growth_var}).}

\item{climate_data}{A data frame with DAILY climate data. Must contain date and value columns.}

\item{date_col}{Character string. Name of the date column (must be Date class)
in \code{climate_data}. Default: "date".}

\item{value_col}{Character string. Name of the numeric value column in \code{climate_data}.
Default: "value".}

\item{growth_var}{Character string. Growth index column name (default: "res").}

\item{climate_var_name}{Character string. Base name for climate variable (default: "climate_d").
Used for internal messages and default output filename.}

\item{window_widths_days}{Integer vector. Sequence of moving window widths in DAYS
to test (e.g., \code{30:365}). Default: \code{30:365}.}

\item{end_days}{Integer vector. Sequence of relative end days for the window.
Day 1 = Jan 1 of year BEFORE growth year; Day 730 approx Dec 31 of growth year.
Default: \code{1:730}.}

\item{start_year}{Optional integer. First year for analysis.}

\item{end_year}{Optional integer. Last year for analysis.}

\item{cor_method}{Character string. Correlation method (default: "pearson").}

\item{daily_roll_fun}{Function or Character string. Function for daily rolling window
('sum' or 'mean'). Default: "sum".}

\item{sig}{Numeric. Threshold for p-value significance (default: 0.05).}

\item{save_significant}{Logical. Save significant results to file? (Default: TRUE).}

\item{output_filename}{Character string or NULL. Path/filename for significant
results (.txt). If NULL, default name is generated.}
}
\value{
A list containing:
\itemize{
\item \code{correlations}: Wide data frame (rows=window_width_days, cols=end_day) of correlations.
\item \code{p_values}: Wide data frame of p-values.
\item \code{n_overlap}: Wide data frame of overlap counts (N).
\item \code{significant_tidy}: Tidy data frame (p < \code{sig}). Columns:
window_width_days, end_day, correlation, p_value, n_overlap.
}
Returns NULL if calculations fail. Shows progress bar.
}
\description{
Calculates the correlation between an annual tree-growth variable and a DAILY
climate variable. Computes correlations for various rolling window widths
(in days) ending on specific days relative to the growth year.
Day 1 is Jan 1 of the previous year, Day 730 is approx Dec 31 of the growth year.
Returns results formatted for heatmap analysis (wide matrices: width vs end_day)
and optionally saves significant correlations. Requires daily climate input.
VERY COMPUTATIONALLY INTENSIVE.
}
\examples{
\dontrun{ # VERY SLOW example
# --- Generate Sample Data ---
growth <- data.frame(year = 1980:2000, res = rnorm(21)) # Shorter period
# Daily Climate Data
dates_d <- seq(as.Date("1978-01-01"), as.Date("2001-12-31"), by = "day")
climate_d <- data.frame(my_date = dates_d, my_value = runif(length(dates_d), 0, 10))
# No attributes needed now, columns specified directly

# --- Run clim_corr_d (SMALL example range) ---
temp_dir <- tempdir()
fname <- file.path(temp_dir, "sig_corr_d_prec_d.txt")
results_list_d <- clim_corr_d(
  growth_data = growth,
  climate_data = climate_d,
  date_col = "my_date",         # Specify column names
  value_col = "my_value",
  climate_var_name = "prec_d",
  window_widths_days = c(30, 60, 90), # Small set of widths
  end_days = seq(300, 400, by=10),    # Small, sparse set of end days
  daily_roll_fun = "sum",
  output_filename = fname
)

# --- Inspect results ---
if (!is.null(results_list_d)) {
  print("Correlation Matrix (Daily, Width vs End Day):")
  print(results_list_d$correlations)
  print("Significant Tidy Results (Daily, p < 0.05):")
  print(results_list_d$significant_tidy)
  if(file.exists(fname)) {
     print(paste("Significant results saved to:", fname))
     unlink(fname) # Clean up temp file
  }
}
} # End dontrun

}
