% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_rwi.R
\name{write_rwi}
\alias{write_rwi}
\title{Write Ring Width Index (RWI) data to a file}
\usage{
write_rwi(rwi_object, fname, format = "tucson", ...)
}
\arguments{
\item{rwi_object}{A data.frame with years as row names and series IDs
as column names, containing the RWI values. This is typically the
output from a function like \code{det_32}.}

\item{fname}{Character string. The path and filename for the output file
(e.g., "my_study_area_rwi.rwl").}

\item{format}{Character string. The format for saving the file. Passed
to \code{dplR::write.rwl}. Common options include "tucson" (default),
"compact". See \code{?dplR::write.rwl} for details.}

\item{...}{Optional. Other arguments passed on to \code{dplR::write.rwl}, such
as \code{append = FALSE} or \code{prec = 0.001}.}
}
\value{
Invisibly returns \code{NULL} upon successful completion. Throws an
error if writing fails (e.g., invalid path, permissions issues).
}
\description{
Saves a data frame containing RWI series (typically the output of a
detrending function like \code{det_32}) to a file in a standard
dendrochronology format, commonly the Tucson (.rwl) format used for RWI.
}
\examples{
\dontrun{
# This example assumes you have run det_32 previously
# and have the result in 'my_rwi_data'

# Example: Generate some dummy RWI data (replace with actual data)
years <- 1950:2000
series1 <- 1 + rnorm(length(years), 0, 0.2)
series2 <- 1 + rnorm(length(years), 0, 0.3)
my_rwi_data <- data.frame(series1, series2, row.names = years)

# Define the output file path
output_file <- "example_output.rwl"

# Write the RWI data using the function
write_rwi(my_rwi_data, fname = output_file)

# Check if the file exists
file.exists(output_file)

# Clean up the created file
unlink(output_file)

# Example writing in compact format
# write_rwi(my_rwi_data, fname = "example_compact.txt", format = "compact")
# unlink("example_compact.txt")
}

# Example using dplR data and temporary file (safer for examples)
if (requireNamespace("dplR", quietly = TRUE)) {
  data(co021, package = "dplR")
  # Assuming det_32 is loaded from your package (dRvja)
  # rwi_co021 <- det_32(co021) # Need to run load_all() first
  # Using dplR's detrend directly here for a self-contained example
  rwi_co021_df <- dplR::detrend(co021, method = "Spline", nyrs = 32)


  temp_file <- tempfile(fileext = ".rwl")
  write_rwi(rwi_co021_df, fname = temp_file)
  print(paste("RWI data written to temporary file:", temp_file))
  # You can check the content, e.g., head(dplR::read.rwl(temp_file))
  unlink(temp_file) # Clean up
}

}
